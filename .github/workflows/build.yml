name: "Build"

concurrency:
  # for PR's cancel the running task, if another commit is pushed
  group: ${{ github.workflow }} ${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

on:
  # build on PR and push-to-main. This works for short-lived branches, and saves
  # CPU cycles on duplicated tests.
  # For long-lived branches that diverge, you'll want to run on all pushes, not
  # just on push-to-main.
  pull_request: {}
  push:
    branches:
    - master


jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-20.04', 'macos-11.0']
        luaVersion:
        - "5.1"
        - "5.2"
        - "5.3"
        - "5.4"
        - "luajit"
        - "luajit-openresty"
        include:
          - os: "macos-latest"
            luaVersion: "5.4"
          - os: "windows-latest"
            luaVersion: "luajit"
          - os: "windows-latest"
            toolchain: "msvc"
            luaVersion: "5.4"

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Setup MSVC
        if: ${{ matrix.toolchain == 'msvc' }}
        uses: ilammy/msvc-dev-cmd@v1

      - name: install Dependencies analyzer
        if: ${{ matrix.toolchain == 'msvc' }}
        run: |
          $version = "1.11.1"
          echo "Installing Dependencies version: $version"
          $url = 'https://github.com/lucasg/Dependencies/releases/download/v' + $version + '/Dependencies_x64_Release.zip'
          $dest = Join-Path -Path $PWD -ChildPath ".dependencies"

          # Download and extract Dependencies
          New-Item -ItemType Directory -Path "$dest"
          Invoke-WebRequest -Uri $url -OutFile "$dest\dependencies.zip"
          Expand-Archive -Path "$dest\dependencies.zip" -DestinationPath "$dest"
          Remove-Item -Path "$dest\dependencies.zip"
          # dir "$dest"

          # Add Dependencies to PATH
          $env:PATH += ";$dest"
          echo $env:PATH

          # Verify Dependencies Installation
          dir "$dest\*.exe"
          dir ".\.dependencies\Dependencies.exe"
          .\.dependencies\Dependencies.exe -help

      - uses: hishamhm/gh-actions-lua@master
        with:
          luaVersion: ${{ matrix.luaVersion }}

      - uses: hishamhm/gh-actions-luarocks@master
        with:
          luarocksVersion: "3.11.0"

      - name: dependencies
        run: |
          luarocks install busted
          luarocks config
          luarocks show luafilesystem

      - name: check dependencies
        if: ${{ matrix.toolchain == 'msvc' }}
        run: |
          dir C:\Users\runneradmin\AppData\Roaming\luarocks\lib\lua\5.4\lfs.dll
          lua -e "print(require'system.core')"
          lua -e "print(require'lfs')"
          .\.dependencies\Dependencies.exe -json -exports C:\Users\runneradmin\AppData\Roaming\luarocks\lib\lua\5.4\lfs.dll
          luarocks make

      - name: test
        run: |
          busted --Xoutput "--color"

      # - name: Report test coverage
      #   if: success()
      #   continue-on-error: true
      #   run: luacov-coveralls
      #   env:
      #     COVERALLS_REPO_TOKEN: ${{ github.token }}
